{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","gameStyle","width","height","MainNav","className","href","Home","id","About","Skills","Projects","Contact","TFIL","props","state","show","mouseOver","showInfo","bind","addMouseOver","removeMouseOver","this","setState","aboutDisplay","toggle","toggleAbout","toggleArrow","push","join","onClick","onMouseEnter","onMouseLeave","style","React","Component","AboutSection","option","hoverOption","setOption","selected","instructionSelect","processSelect","contactSelect","instructions","process","contact","target","App","path","name","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.82cd44bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport logo from './logo.svg';\nimport './App.css';\nimport './main-screen.css';\nimport './home-page.css';\n\nconst gameStyle = {\n  width: '1800px',\n  height: '1800px'\n};\n\n/*function App() {\n  return (\n    <div className=\"App\">\n      <div className=\"webgl-content\">\n        <div id=\"gameContainer\" style={gameStyle}></div>\n      </div>\n    </div>\n  );\n}\n\n<nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/games\">Games</Link>\n            </li>\n          </ul>\n        </nav>*/\n\nfunction App() {\n  return (\n    <Router>\n        <Switch>\n          <Route path=\"/tfil\">\n            <TFIL />\n          </Route>\n          <Route path=\"/\">\n            <div id=\"portfolio\">\n            <a name=\"home\"></a>\n            <Home />\n            <MainNav />\n            <div className=\"info-block\">\n              <a name=\"about\"></a>\n              <About />\n              <a name=\"skills\"></a>\n              <Skills />\n              <a name=\"projects\"></a>\n              <Projects />\n              <a name=\"contact\"></a>\n              <Contact />\n            </div>\n            </div>\n          </Route>\n        </Switch>\n    </Router>\n  );\n}\n\nfunction MainNav() {\n  return <div className=\"main-nav\">\n    <a className=\"nav-element\" href=\"#home\">Home</a>\n    <a className=\"nav-element\" href=\"#about\">About</a>\n    <a className=\"nav-element\" href=\"#skills\">Skills</a>\n    <a className=\"nav-element\" href=\"#projects\">Projects</a>\n    <a className=\"nav-element\" href=\"#contact\">Contact</a>\n  </div>\n}\n\nfunction Home() {\n  return <div className=\"title-block\"><div id=\"intro\">Hi, my name is</div><div id=\"name\">Randel Emens</div></div>;\n}\n\nfunction About() {\n  return <div className=\"about-section\">About</div>;\n}\n\nfunction Skills() {\n  return <div className=\"skills-section\">Skills</div>;\n}\n\nfunction Projects() {\n  return <div>Projects</div>;\n}\n\nfunction Contact() {\n  return <div>Contact</div>;\n}\n\n\nclass TFIL extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {  \n      show: false,\n      mouseOver: false\n    };\n    this.showInfo = this.showInfo.bind(this);\n    this.addMouseOver = this.addMouseOver.bind(this);\n    this.removeMouseOver = this.removeMouseOver.bind(this);\n  }\n\n  showInfo() {\n    this.setState({show: !this.state.show});\n  }\n\n  addMouseOver() {\n    this.setState({mouseOver: true})\n  }\n\n  removeMouseOver() {\n    this.setState({mouseOver: false})\n  }\n\n  render() {\n    const aboutDisplay = ['about'];\n    var toggle = \"About\";\n    const toggleAbout = ['toggle-about'];\n    const toggleArrow = ['arrow'];\n    if (this.state.show) {\n      aboutDisplay.push('show');\n      toggle = \"Hide\";\n      toggleArrow.push('show');\n      toggleAbout.push('show');\n    }\n    if (this.state.mouseOver) {toggleAbout.push('highlight'); toggleArrow.push('highlight');}\n    return (<div id=\"game-screen\">\n      <div className={aboutDisplay.join(' ')}><AboutSection /></div>\n      <div onClick={this.showInfo} onMouseEnter={this.addMouseOver} onMouseLeave={this.removeMouseOver} className={toggleAbout.join(' ')}>\n        {toggle}\n        <div className={toggleArrow.join(' ')}></div>\n      </div>\n      <div id=\"game-page\">\n        <div id=\"game\">\n          <div id=\"gameContainer\" style={gameStyle}>\n          </div>\n        </div>\n      </div>\n    </div>);\n  }\n}\n\nclass AboutSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {  \n      option: 1,\n      hoverOption: 0\n    };\n    this.setOption = this.setOption.bind(this);\n    this.addMouseOver = this.addMouseOver.bind(this);\n    this.removeMouseOver = this.removeMouseOver.bind(this)\n  }\n\n  setOption(selected) {\n    this.setState({option: selected});\n  }\n\n  addMouseOver(selected) {\n    this.setState({hoverOption: selected});\n  }\n\n  removeMouseOver() {\n    this.setState({hoverOption: 0})\n  }\n\n  render() {\n    const instructionSelect = ['option'];\n    const processSelect = ['option'];\n    const contactSelect = ['option'];\n    const instructions = ['option-display'];\n    const process = ['option-display'];\n    const contact = ['option-display'];\n    if (this.state.option == 1) {\n      instructions.push('selected');\n      instructionSelect.push('selected');\n    }\n    else if (this.state.option == 2) {\n      process.push('selected');\n      processSelect.push('selected');\n    }\n    else if (this.state.option == 3) {\n      contact.push('selected');\n      contactSelect.push('selected');\n    }\n\n    if (this.state.hoverOption == 1) instructionSelect.push('hover');\n    else if (this.state.hoverOption == 2) processSelect.push('hover');\n    else if (this.state.hoverOption == 3) contactSelect.push('hover');\n    return (<div className=\"about-container\">\n      <div className=\"option-select\">\n        <div onClick={this.setOption.bind(this, 1)} onMouseEnter={this.addMouseOver.bind(this, 1)} onMouseLeave={this.removeMouseOver} className={instructionSelect.join(' ')}>Instructions</div>\n        <div onClick={this.setOption.bind(this, 2)} onMouseEnter={this.addMouseOver.bind(this, 2)} onMouseLeave={this.removeMouseOver} className={processSelect.join(' ')}>My Process</div>\n        <div onClick={this.setOption.bind(this, 3)} onMouseEnter={this.addMouseOver.bind(this, 3)} onMouseLeave={this.removeMouseOver} className={contactSelect.join(' ')}>Contact</div>\n      </div>\n      <div className={instructions.join(' ')}>\n        <h2>A few tips that might be useful...</h2>\n        <p className=\"display-body\">The goal of the game is simple: collect as many blue coins (worth 10 points each) as you can while avoiding any lava objects.\n        Every level contains three of these coins and collecting all three will have you proceed to the next level.\n        Proceeding to the next level will add 50 points to your score. You will also receive an additional point\n        for every second that you complete the level in under 30 seconds.\n        </p>\n        <br></br>\n        <p><b>Some movement details:</b>\n          <ul>\n            <li>Holding [space] for longer will give you more airtime</li>\n            <li>Rotating the map ([A] - counterclockwise, [D] - clockwise) allows you to reach places you couldn't\n              with an ordinary jump. It also allows you to instantaneously change directions to quickly avoid any incoming objects.\n            </li>\n          </ul>\n        </p>\n\n        <p>Have fun!</p>\n      </div>\n      <div className={process.join(' ')}>\n        <h2>How was everything built?</h2>\n        <p className=\"display-body\">I wanted to build a randomly generated platform game for a few reasons. The main reason\n          I was set on this is because it allowed me to focus on the coding rather than on intensive level design.\n          For better or worse, this came with some unique problems to solve:\n        </p>\n        <ul>\n            <li><b>What happens if a blue coin is generated in a way that is impossible to reach?</b> This was probably the\n            most interesting problem to solve. If platform blocks are spawned in a way that blocks off a coin, the game\n            can't progress. I ended up using a <b>breadth-first search</b> to make sure there was a valid path to each coin from\n            where the player was. If there wasn't, I'd take the closest valid point and destroy any blocks in\n            the way with another breadth-first search.\n            </li>\n            <li><b>How do I generate platforms in a way that looks good?</b> I ultimately decided on a spiral matrix generation\n            so every direction will have platforms facing the correct direction.\n            </li>\n            <li><b>How do I make the game progress in difficulty?</b> This is probably the most abstract problem to solve and\n            something I want to get better at for game design. I ended up increasing the number of\n            lava blocks and the rate of lava drop spawns to up the level difficulty.\n            </li>\n          </ul>\n        <h2>What my goals were going into this...</h2>\n        <p className=\"display-body\"> In building this game, my goal was to better understand some core coding principles. I wanted\n          to combine some things I've learned so far into a working project and a fun way of doing so\n          seemed to be through a game. I hoped building this would help me learn everything from code management to \n          user experience design. I believe I accomplished that goal.\n        </p>\n        <p> This has been extraordinarily fun to code up and I'm excited to work on the next.</p>\n      </div>\n      <div className={contact.join(' ')}>\n        <h2>Tell me what you think!</h2>\n        <p className=\"display-body\">This is my first complete game so any and all feedback is welcome.\n        I want to keep making games and improve on every iteration. I'd love to know what I could do better\n        on everything from animation to code management. Feel free to reach me on either <a href=\"https://github.com/randyemens\" target=\"_blank\">Github</a> or <a href=\"https://www.linkedin.com/in/randel-emens-287167b6/\" target=\"_blank\">LinkedIn</a>.\n        </p>\n        <p className=\"display-body\">The code needs a bit of tidying up but you can also view the source code <a href=\"https://github.com/randyemens/TheFloorIsLava\" target=\"_blank\">here</a>!</p>\n      </div>\n    </div>);\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}